swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Url http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /banco/:
    get:
      tags:
      - banco
      description: get Banco
      operationId: BancoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Banco'
        "403": {}
    post:
      tags:
      - banco
      description: create Banco
      operationId: BancoController.Post
      parameters:
      - in: body
        name: body
        description: body for Banco content
        required: true
        schema:
          $ref: '#/definitions/Banco'
      responses:
        "201":
          description: '{int} models.Banco'
        "403":
          description: body is empty
  /banco/{id}:
    get:
      tags:
      - banco
      description: get Banco by id
      operationId: BancoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Banco'
        "403":
          description: :id is empty
    put:
      tags:
      - banco
      description: update the Banco
      operationId: BancoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Banco content
        required: true
        schema:
          $ref: '#/definitions/Banco'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Banco'
        "403":
          description: :id is not int
    delete:
      tags:
      - banco
      description: delete the Banco
      operationId: BancoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ciiu_clase/:
    get:
      tags:
      - ciiu_clase
      description: get CiiuClase
      operationId: CiiuClaseController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuClase'
        "403": {}
    post:
      tags:
      - ciiu_clase
      description: create CiiuClase
      operationId: CiiuClaseController.Post
      parameters:
      - in: body
        name: body
        description: body for CiiuClase content
        required: true
        schema:
          $ref: '#/definitions/CiiuClase'
      responses:
        "201":
          description: '{int} models.CiiuClase'
        "403":
          description: body is empty
  /ciiu_clase/{id}:
    get:
      tags:
      - ciiu_clase
      description: get CiiuClase by id
      operationId: CiiuClaseController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuClase'
        "403":
          description: :id is empty
    put:
      tags:
      - ciiu_clase
      description: update the CiiuClase
      operationId: CiiuClaseController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CiiuClase content
        required: true
        schema:
          $ref: '#/definitions/CiiuClase'
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuClase'
        "403":
          description: :id is not int
    delete:
      tags:
      - ciiu_clase
      description: delete the CiiuClase
      operationId: CiiuClaseController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ciiu_division/:
    get:
      tags:
      - ciiu_division
      description: get CiiuDivision
      operationId: CiiuDivisionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuDivision'
        "403": {}
    post:
      tags:
      - ciiu_division
      description: create CiiuDivision
      operationId: CiiuDivisionController.Post
      parameters:
      - in: body
        name: body
        description: body for CiiuDivision content
        required: true
        schema:
          $ref: '#/definitions/CiiuDivision'
      responses:
        "201":
          description: '{int} models.CiiuDivision'
        "403":
          description: body is empty
  /ciiu_division/{id}:
    get:
      tags:
      - ciiu_division
      description: get CiiuDivision by id
      operationId: CiiuDivisionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuDivision'
        "403":
          description: :id is empty
    put:
      tags:
      - ciiu_division
      description: update the CiiuDivision
      operationId: CiiuDivisionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CiiuDivision content
        required: true
        schema:
          $ref: '#/definitions/CiiuDivision'
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuDivision'
        "403":
          description: :id is not int
    delete:
      tags:
      - ciiu_division
      description: delete the CiiuDivision
      operationId: CiiuDivisionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ciiu_subclase/:
    get:
      tags:
      - ciiu_subclase
      description: get CiiuSubclase
      operationId: CiiuSubclaseController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuSubclase'
        "403": {}
    post:
      tags:
      - ciiu_subclase
      description: create CiiuSubclase
      operationId: CiiuSubclaseController.Post
      parameters:
      - in: body
        name: body
        description: body for CiiuSubclase content
        required: true
        schema:
          $ref: '#/definitions/CiiuSubclase'
      responses:
        "201":
          description: '{int} models.CiiuSubclase'
        "403":
          description: body is empty
  /ciiu_subclase/{id}:
    get:
      tags:
      - ciiu_subclase
      description: get CiiuSubclase by id
      operationId: CiiuSubclaseController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuSubclase'
        "403":
          description: :id is empty
    put:
      tags:
      - ciiu_subclase
      description: update the CiiuSubclase
      operationId: CiiuSubclaseController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CiiuSubclase content
        required: true
        schema:
          $ref: '#/definitions/CiiuSubclase'
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuSubclase'
        "403":
          description: :id is not int
    delete:
      tags:
      - ciiu_subclase
      description: delete the CiiuSubclase
      operationId: CiiuSubclaseController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ciiu_tipo/:
    get:
      tags:
      - ciiu_tipo
      description: get CiiuTipo
      operationId: CiiuTipoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuTipo'
        "403": {}
    post:
      tags:
      - ciiu_tipo
      description: create CiiuTipo
      operationId: CiiuTipoController.Post
      parameters:
      - in: body
        name: body
        description: body for CiiuTipo content
        required: true
        schema:
          $ref: '#/definitions/CiiuTipo'
      responses:
        "201":
          description: '{int} models.CiiuTipo'
        "403":
          description: body is empty
  /ciiu_tipo/{id}:
    get:
      tags:
      - ciiu_tipo
      description: get CiiuTipo by id
      operationId: CiiuTipoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuTipo'
        "403":
          description: :id is empty
    put:
      tags:
      - ciiu_tipo
      description: update the CiiuTipo
      operationId: CiiuTipoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CiiuTipo content
        required: true
        schema:
          $ref: '#/definitions/CiiuTipo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/CiiuTipo'
        "403":
          description: :id is not int
    delete:
      tags:
      - ciiu_tipo
      description: delete the CiiuTipo
      operationId: CiiuTipoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ciudad/:
    get:
      tags:
      - ciudad
      description: get Ciudad
      operationId: CiudadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Ciudad'
        "403": {}
    post:
      tags:
      - ciudad
      description: create Ciudad
      operationId: CiudadController.Post
      parameters:
      - in: body
        name: body
        description: body for Ciudad content
        required: true
        schema:
          $ref: '#/definitions/Ciudad'
      responses:
        "201":
          description: '{int} models.Ciudad'
        "403":
          description: body is empty
  /ciudad/{id}:
    get:
      tags:
      - ciudad
      description: get Ciudad by id
      operationId: CiudadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Ciudad'
        "403":
          description: :id is empty
    put:
      tags:
      - ciudad
      description: update the Ciudad
      operationId: CiudadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ciudad content
        required: true
        schema:
          $ref: '#/definitions/Ciudad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Ciudad'
        "403":
          description: :id is not int
    delete:
      tags:
      - ciudad
      description: delete the Ciudad
      operationId: CiudadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /codigo_validacion/:
    get:
      tags:
      - codigo_validacion
      description: get CodigoValidacion
      operationId: CodigoValidacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CodigoValidacion'
        "403": {}
    post:
      tags:
      - codigo_validacion
      description: create CodigoValidacion
      operationId: CodigoValidacionController.Post
      parameters:
      - in: body
        name: body
        description: body for CodigoValidacion content
        required: true
        schema:
          $ref: '#/definitions/CodigoValidacion'
      responses:
        "201":
          description: '{int} models.CodigoValidacion'
        "403":
          description: body is empty
  /codigo_validacion/{id}:
    get:
      tags:
      - codigo_validacion
      description: get CodigoValidacion by id
      operationId: CodigoValidacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/CodigoValidacion'
        "403":
          description: :id is empty
    put:
      tags:
      - codigo_validacion
      description: update the CodigoValidacion
      operationId: CodigoValidacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CodigoValidacion content
        required: true
        schema:
          $ref: '#/definitions/CodigoValidacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/CodigoValidacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - codigo_validacion
      description: delete the CodigoValidacion
      operationId: CodigoValidacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /contrato/:
    get:
      tags:
      - contrato
      description: get Contrato
      operationId: ContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Contrato'
        "403": {}
    post:
      tags:
      - contrato
      description: create Contrato
      operationId: ContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for Contrato content
        required: true
        schema:
          $ref: '#/definitions/Contrato'
      responses:
        "201":
          description: '{int} models.Contrato'
        "403":
          description: body is empty
  /contrato/{id}:
    get:
      tags:
      - contrato
      description: get Contrato by id
      operationId: ContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Contrato'
        "403":
          description: :id is empty
    put:
      tags:
      - contrato
      description: update the Contrato
      operationId: ContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Contrato content
        required: true
        schema:
          $ref: '#/definitions/Contrato'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Contrato'
        "403":
          description: :id is not int
    delete:
      tags:
      - contrato
      description: delete the Contrato
      operationId: ContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /contrato_proveedor/:
    get:
      tags:
      - contrato_proveedor
      description: get ContratoProveedor
      operationId: ContratoProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ContratoProveedor'
        "403": {}
    post:
      tags:
      - contrato_proveedor
      description: create ContratoProveedor
      operationId: ContratoProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for ContratoProveedor content
        required: true
        schema:
          $ref: '#/definitions/ContratoProveedor'
      responses:
        "201":
          description: '{int} models.ContratoProveedor'
        "403":
          description: body is empty
  /contrato_proveedor/{id}:
    get:
      tags:
      - contrato_proveedor
      description: get ContratoProveedor by id
      operationId: ContratoProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ContratoProveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - contrato_proveedor
      description: update the ContratoProveedor
      operationId: ContratoProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContratoProveedor content
        required: true
        schema:
          $ref: '#/definitions/ContratoProveedor'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ContratoProveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - contrato_proveedor
      description: delete the ContratoProveedor
      operationId: ContratoProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /departamento/:
    get:
      tags:
      - departamento
      description: get Departamento
      operationId: DepartamentoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Departamento'
        "403": {}
    post:
      tags:
      - departamento
      description: create Departamento
      operationId: DepartamentoController.Post
      parameters:
      - in: body
        name: body
        description: body for Departamento content
        required: true
        schema:
          $ref: '#/definitions/Departamento'
      responses:
        "201":
          description: '{int} models.Departamento'
        "403":
          description: body is empty
  /departamento/{id}:
    get:
      tags:
      - departamento
      description: get Departamento by id
      operationId: DepartamentoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Departamento'
        "403":
          description: :id is empty
    put:
      tags:
      - departamento
      description: update the Departamento
      operationId: DepartamentoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Departamento content
        required: true
        schema:
          $ref: '#/definitions/Departamento'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Departamento'
        "403":
          description: :id is not int
    delete:
      tags:
      - departamento
      description: delete the Departamento
      operationId: DepartamentoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /dependencia/:
    get:
      tags:
      - dependencia
      description: get Dependencia
      operationId: DependenciaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Dependencia'
        "403": {}
    post:
      tags:
      - dependencia
      description: create Dependencia
      operationId: DependenciaController.Post
      parameters:
      - in: body
        name: body
        description: body for Dependencia content
        required: true
        schema:
          $ref: '#/definitions/Dependencia'
      responses:
        "201":
          description: '{int} models.Dependencia'
        "403":
          description: body is empty
  /dependencia/{id}:
    get:
      tags:
      - dependencia
      description: get Dependencia by id
      operationId: DependenciaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Dependencia'
        "403":
          description: :id is empty
    put:
      tags:
      - dependencia
      description: update the Dependencia
      operationId: DependenciaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Dependencia content
        required: true
        schema:
          $ref: '#/definitions/Dependencia'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Dependencia'
        "403":
          description: :id is not int
    delete:
      tags:
      - dependencia
      description: delete the Dependencia
      operationId: DependenciaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /evaluacion/:
    get:
      tags:
      - evaluacion
      description: get Evaluacion
      operationId: EvaluacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Evaluacion'
        "403": {}
    post:
      tags:
      - evaluacion
      description: create Evaluacion
      operationId: EvaluacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Evaluacion content
        required: true
        schema:
          $ref: '#/definitions/Evaluacion'
      responses:
        "201":
          description: '{int} models.Evaluacion'
        "403":
          description: body is empty
  /evaluacion/{id}:
    get:
      tags:
      - evaluacion
      description: get Evaluacion by id
      operationId: EvaluacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Evaluacion'
        "403":
          description: :id is empty
    put:
      tags:
      - evaluacion
      description: update the Evaluacion
      operationId: EvaluacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Evaluacion content
        required: true
        schema:
          $ref: '#/definitions/Evaluacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Evaluacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - evaluacion
      description: delete the Evaluacion
      operationId: EvaluacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /informacion_persona_juridica/:
    get:
      tags:
      - informacion_persona_juridica
      description: get InformacionPersonaJuridica
      operationId: InformacionPersonaJuridicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaJuridica'
        "403": {}
    post:
      tags:
      - informacion_persona_juridica
      description: create InformacionPersonaJuridica
      operationId: InformacionPersonaJuridicaController.Post
      parameters:
      - in: body
        name: body
        description: body for InformacionPersonaJuridica content
        required: true
        schema:
          $ref: '#/definitions/InformacionPersonaJuridica'
      responses:
        "201":
          description: '{int} models.InformacionPersonaJuridica'
        "403":
          description: body is empty
  /informacion_persona_juridica/{id}:
    get:
      tags:
      - informacion_persona_juridica
      description: get InformacionPersonaJuridica by id
      operationId: InformacionPersonaJuridicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaJuridica'
        "403":
          description: :id is empty
    put:
      tags:
      - informacion_persona_juridica
      description: update the InformacionPersonaJuridica
      operationId: InformacionPersonaJuridicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InformacionPersonaJuridica content
        required: true
        schema:
          $ref: '#/definitions/InformacionPersonaJuridica'
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaJuridica'
        "403":
          description: :id is not int
    delete:
      tags:
      - informacion_persona_juridica
      description: delete the InformacionPersonaJuridica
      operationId: InformacionPersonaJuridicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /informacion_persona_natural/:
    get:
      tags:
      - informacion_persona_natural
      description: get InformacionPersonaNatural
      operationId: InformacionPersonaNaturalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaNatural'
        "403": {}
    post:
      tags:
      - informacion_persona_natural
      description: create InformacionPersonaNatural
      operationId: InformacionPersonaNaturalController.Post
      parameters:
      - in: body
        name: body
        description: body for InformacionPersonaNatural content
        required: true
        schema:
          $ref: '#/definitions/InformacionPersonaNatural'
      responses:
        "201":
          description: '{int} models.InformacionPersonaNatural'
        "403":
          description: body is empty
  /informacion_persona_natural/{id}:
    get:
      tags:
      - informacion_persona_natural
      description: get InformacionPersonaNatural by id
      operationId: InformacionPersonaNaturalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaNatural'
        "403":
          description: :id is empty
    put:
      tags:
      - informacion_persona_natural
      description: update the InformacionPersonaNatural
      operationId: InformacionPersonaNaturalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InformacionPersonaNatural content
        required: true
        schema:
          $ref: '#/definitions/InformacionPersonaNatural'
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionPersonaNatural'
        "403":
          description: :id is not int
    delete:
      tags:
      - informacion_persona_natural
      description: delete the InformacionPersonaNatural
      operationId: InformacionPersonaNaturalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /informacion_proveedor/:
    get:
      tags:
      - informacion_proveedor
      description: get InformacionProveedor
      operationId: InformacionProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionProveedor'
        "403": {}
    post:
      tags:
      - informacion_proveedor
      description: create InformacionProveedor
      operationId: InformacionProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for InformacionProveedor content
        required: true
        schema:
          $ref: '#/definitions/InformacionProveedor'
      responses:
        "201":
          description: '{int} models.InformacionProveedor'
        "403":
          description: body is empty
  /informacion_proveedor/{id}:
    get:
      tags:
      - informacion_proveedor
      description: get InformacionProveedor by id
      operationId: InformacionProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionProveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - informacion_proveedor
      description: update the InformacionProveedor
      operationId: InformacionProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InformacionProveedor content
        required: true
        schema:
          $ref: '#/definitions/InformacionProveedor'
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionProveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - informacion_proveedor
      description: delete the InformacionProveedor
      operationId: InformacionProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /informacion_sociedad_participante/:
    get:
      tags:
      - informacion_sociedad_participante
      description: get InformacionSociedadParticipante
      operationId: InformacionSociedadParticipanteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadParticipante'
        "403": {}
    post:
      tags:
      - informacion_sociedad_participante
      description: create InformacionSociedadParticipante
      operationId: InformacionSociedadParticipanteController.Post
      parameters:
      - in: body
        name: body
        description: body for InformacionSociedadParticipante content
        required: true
        schema:
          $ref: '#/definitions/InformacionSociedadParticipante'
      responses:
        "201":
          description: '{int} models.InformacionSociedadParticipante'
        "403":
          description: body is empty
  /informacion_sociedad_participante/{id}:
    get:
      tags:
      - informacion_sociedad_participante
      description: get InformacionSociedadParticipante by id
      operationId: InformacionSociedadParticipanteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadParticipante'
        "403":
          description: :id is empty
    put:
      tags:
      - informacion_sociedad_participante
      description: update the InformacionSociedadParticipante
      operationId: InformacionSociedadParticipanteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InformacionSociedadParticipante content
        required: true
        schema:
          $ref: '#/definitions/InformacionSociedadParticipante'
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadParticipante'
        "403":
          description: :id is not int
    delete:
      tags:
      - informacion_sociedad_participante
      description: delete the InformacionSociedadParticipante
      operationId: InformacionSociedadParticipanteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /informacion_sociedad_temporal/:
    get:
      tags:
      - informacion_sociedad_temporal
      description: get InformacionSociedadTemporal
      operationId: InformacionSociedadTemporalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadTemporal'
        "403": {}
    post:
      tags:
      - informacion_sociedad_temporal
      description: create InformacionSociedadTemporal
      operationId: InformacionSociedadTemporalController.Post
      parameters:
      - in: body
        name: body
        description: body for InformacionSociedadTemporal content
        required: true
        schema:
          $ref: '#/definitions/InformacionSociedadTemporal'
      responses:
        "201":
          description: '{int} models.InformacionSociedadTemporal'
        "403":
          description: body is empty
  /informacion_sociedad_temporal/{id}:
    get:
      tags:
      - informacion_sociedad_temporal
      description: get InformacionSociedadTemporal by id
      operationId: InformacionSociedadTemporalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadTemporal'
        "403":
          description: :id is empty
    put:
      tags:
      - informacion_sociedad_temporal
      description: update the InformacionSociedadTemporal
      operationId: InformacionSociedadTemporalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InformacionSociedadTemporal content
        required: true
        schema:
          $ref: '#/definitions/InformacionSociedadTemporal'
      responses:
        "200":
          schema:
            $ref: '#/definitions/InformacionSociedadTemporal'
        "403":
          description: :id is not int
    delete:
      tags:
      - informacion_sociedad_temporal
      description: delete the InformacionSociedadTemporal
      operationId: InformacionSociedadTemporalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /inhabilidad/:
    get:
      tags:
      - inhabilidad
      description: get Inhabilidad
      operationId: InhabilidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Inhabilidad'
        "403": {}
    post:
      tags:
      - inhabilidad
      description: create Inhabilidad
      operationId: InhabilidadController.Post
      parameters:
      - in: body
        name: body
        description: body for Inhabilidad content
        required: true
        schema:
          $ref: '#/definitions/Inhabilidad'
      responses:
        "201":
          description: '{int} models.Inhabilidad'
        "403":
          description: body is empty
  /inhabilidad/{id}:
    get:
      tags:
      - inhabilidad
      description: get Inhabilidad by id
      operationId: InhabilidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Inhabilidad'
        "403":
          description: :id is empty
    put:
      tags:
      - inhabilidad
      description: update the Inhabilidad
      operationId: InhabilidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Inhabilidad content
        required: true
        schema:
          $ref: '#/definitions/Inhabilidad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Inhabilidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - inhabilidad
      description: delete the Inhabilidad
      operationId: InhabilidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /menu/:
    get:
      tags:
      - menu
      description: get Menu
      operationId: MenuController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Menu'
        "403": {}
    post:
      tags:
      - menu
      description: create Menu
      operationId: MenuController.Post
      parameters:
      - in: body
        name: body
        description: body for Menu content
        required: true
        schema:
          $ref: '#/definitions/Menu'
      responses:
        "201":
          description: '{int} models.Menu'
        "403":
          description: body is empty
  /menu/{id}:
    get:
      tags:
      - menu
      description: get Menu by id
      operationId: MenuController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Menu'
        "403":
          description: :id is empty
    put:
      tags:
      - menu
      description: update the Menu
      operationId: MenuController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Menu content
        required: true
        schema:
          $ref: '#/definitions/Menu'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Menu'
        "403":
          description: :id is not int
    delete:
      tags:
      - menu
      description: delete the Menu
      operationId: MenuController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /nomenclatura_dian/:
    get:
      tags:
      - nomenclatura_dian
      description: get NomenclaturaDian
      operationId: NomenclaturaDianController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/NomenclaturaDian'
        "403": {}
    post:
      tags:
      - nomenclatura_dian
      description: create NomenclaturaDian
      operationId: NomenclaturaDianController.Post
      parameters:
      - in: body
        name: body
        description: body for NomenclaturaDian content
        required: true
        schema:
          $ref: '#/definitions/NomenclaturaDian'
      responses:
        "201":
          description: '{int} models.NomenclaturaDian'
        "403":
          description: body is empty
  /nomenclatura_dian/{id}:
    get:
      tags:
      - nomenclatura_dian
      description: get NomenclaturaDian by id
      operationId: NomenclaturaDianController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/NomenclaturaDian'
        "403":
          description: :id is empty
    put:
      tags:
      - nomenclatura_dian
      description: update the NomenclaturaDian
      operationId: NomenclaturaDianController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NomenclaturaDian content
        required: true
        schema:
          $ref: '#/definitions/NomenclaturaDian'
      responses:
        "200":
          schema:
            $ref: '#/definitions/NomenclaturaDian'
        "403":
          description: :id is not int
    delete:
      tags:
      - nomenclatura_dian
      description: delete the NomenclaturaDian
      operationId: NomenclaturaDianController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /objeto_contratar/:
    get:
      tags:
      - objeto_contratar
      description: get ObjetoContratar
      operationId: ObjetoContratarController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratar'
        "403": {}
    post:
      tags:
      - objeto_contratar
      description: create ObjetoContratar
      operationId: ObjetoContratarController.Post
      parameters:
      - in: body
        name: body
        description: body for ObjetoContratar content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratar'
      responses:
        "201":
          description: '{int} models.ObjetoContratar'
        "403":
          description: body is empty
  /objeto_contratar/{id}:
    get:
      tags:
      - objeto_contratar
      description: get ObjetoContratar by id
      operationId: ObjetoContratarController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratar'
        "403":
          description: :id is empty
    put:
      tags:
      - objeto_contratar
      description: update the ObjetoContratar
      operationId: ObjetoContratarController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ObjetoContratar content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratar'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratar'
        "403":
          description: :id is not int
    delete:
      tags:
      - objeto_contratar
      description: delete the ObjetoContratar
      operationId: ObjetoContratarController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /objeto_contratar_actividad_ciiu/:
    get:
      tags:
      - objeto_contratar_actividad_ciiu
      description: get ObjetoContratarActividadCiiu
      operationId: ObjetoContratarActividadCiiuController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarActividadCiiu'
        "403": {}
    post:
      tags:
      - objeto_contratar_actividad_ciiu
      description: create ObjetoContratarActividadCiiu
      operationId: ObjetoContratarActividadCiiuController.Post
      parameters:
      - in: body
        name: body
        description: body for ObjetoContratarActividadCiiu content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratarActividadCiiu'
      responses:
        "201":
          description: '{int} models.ObjetoContratarActividadCiiu'
        "403":
          description: body is empty
  /objeto_contratar_actividad_ciiu/{id}:
    get:
      tags:
      - objeto_contratar_actividad_ciiu
      description: get ObjetoContratarActividadCiiu by id
      operationId: ObjetoContratarActividadCiiuController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarActividadCiiu'
        "403":
          description: :id is empty
    put:
      tags:
      - objeto_contratar_actividad_ciiu
      description: update the ObjetoContratarActividadCiiu
      operationId: ObjetoContratarActividadCiiuController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ObjetoContratarActividadCiiu content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratarActividadCiiu'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarActividadCiiu'
        "403":
          description: :id is not int
    delete:
      tags:
      - objeto_contratar_actividad_ciiu
      description: delete the ObjetoContratarActividadCiiu
      operationId: ObjetoContratarActividadCiiuController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /objeto_contratar_nucleo_basico/:
    get:
      tags:
      - objeto_contratar_nucleo_basico
      description: get ObjetoContratarNucleoBasico
      operationId: ObjetoContratarNucleoBasicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarNucleoBasico'
        "403": {}
    post:
      tags:
      - objeto_contratar_nucleo_basico
      description: create ObjetoContratarNucleoBasico
      operationId: ObjetoContratarNucleoBasicoController.Post
      parameters:
      - in: body
        name: body
        description: body for ObjetoContratarNucleoBasico content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratarNucleoBasico'
      responses:
        "201":
          description: '{int} models.ObjetoContratarNucleoBasico'
        "403":
          description: body is empty
  /objeto_contratar_nucleo_basico/{id}:
    get:
      tags:
      - objeto_contratar_nucleo_basico
      description: get ObjetoContratarNucleoBasico by id
      operationId: ObjetoContratarNucleoBasicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarNucleoBasico'
        "403":
          description: :id is empty
    put:
      tags:
      - objeto_contratar_nucleo_basico
      description: update the ObjetoContratarNucleoBasico
      operationId: ObjetoContratarNucleoBasicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ObjetoContratarNucleoBasico content
        required: true
        schema:
          $ref: '#/definitions/ObjetoContratarNucleoBasico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ObjetoContratarNucleoBasico'
        "403":
          description: :id is not int
    delete:
      tags:
      - objeto_contratar_nucleo_basico
      description: delete the ObjetoContratarNucleoBasico
      operationId: ObjetoContratarNucleoBasicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ordenador_gasto/:
    get:
      tags:
      - ordenador_gasto
      description: get OrdenadorGasto
      operationId: OrdenadorGastoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/OrdenadorGasto'
        "403": {}
    post:
      tags:
      - ordenador_gasto
      description: create OrdenadorGasto
      operationId: OrdenadorGastoController.Post
      parameters:
      - in: body
        name: body
        description: body for OrdenadorGasto content
        required: true
        schema:
          $ref: '#/definitions/OrdenadorGasto'
      responses:
        "201":
          description: '{int} models.OrdenadorGasto'
        "403":
          description: body is empty
  /ordenador_gasto/{id}:
    get:
      tags:
      - ordenador_gasto
      description: get OrdenadorGasto by id
      operationId: OrdenadorGastoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/OrdenadorGasto'
        "403":
          description: :id is empty
    put:
      tags:
      - ordenador_gasto
      description: update the OrdenadorGasto
      operationId: OrdenadorGastoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OrdenadorGasto content
        required: true
        schema:
          $ref: '#/definitions/OrdenadorGasto'
      responses:
        "200":
          schema:
            $ref: '#/definitions/OrdenadorGasto'
        "403":
          description: :id is not int
    delete:
      tags:
      - ordenador_gasto
      description: delete the OrdenadorGasto
      operationId: OrdenadorGastoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /pais/:
    get:
      tags:
      - pais
      description: get Pais
      operationId: PaisController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Pais'
        "403": {}
    post:
      tags:
      - pais
      description: create Pais
      operationId: PaisController.Post
      parameters:
      - in: body
        name: body
        description: body for Pais content
        required: true
        schema:
          $ref: '#/definitions/Pais'
      responses:
        "201":
          description: '{int} models.Pais'
        "403":
          description: body is empty
  /pais/{id}:
    get:
      tags:
      - pais
      description: get Pais by id
      operationId: PaisController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Pais'
        "403":
          description: :id is empty
    put:
      tags:
      - pais
      description: update the Pais
      operationId: PaisController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Pais content
        required: true
        schema:
          $ref: '#/definitions/Pais'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Pais'
        "403":
          description: :id is not int
    delete:
      tags:
      - pais
      description: delete the Pais
      operationId: PaisController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /parametro_estandar/:
    get:
      tags:
      - parametro_estandar
      description: get ParametroEstandar
      operationId: ParametroEstandarController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ParametroEstandar'
        "403": {}
    post:
      tags:
      - parametro_estandar
      description: create ParametroEstandar
      operationId: ParametroEstandarController.Post
      parameters:
      - in: body
        name: body
        description: body for ParametroEstandar content
        required: true
        schema:
          $ref: '#/definitions/ParametroEstandar'
      responses:
        "201":
          description: '{int} models.ParametroEstandar'
        "403":
          description: body is empty
  /parametro_estandar/{id}:
    get:
      tags:
      - parametro_estandar
      description: get ParametroEstandar by id
      operationId: ParametroEstandarController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ParametroEstandar'
        "403":
          description: :id is empty
    put:
      tags:
      - parametro_estandar
      description: update the ParametroEstandar
      operationId: ParametroEstandarController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParametroEstandar content
        required: true
        schema:
          $ref: '#/definitions/ParametroEstandar'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ParametroEstandar'
        "403":
          description: :id is not int
    delete:
      tags:
      - parametro_estandar
      description: delete the ParametroEstandar
      operationId: ParametroEstandarController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proveedor_actividad_ciiu/:
    get:
      tags:
      - proveedor_actividad_ciiu
      description: get ProveedorActividadCiiu
      operationId: ProveedorActividadCiiuController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorActividadCiiu'
        "403": {}
    post:
      tags:
      - proveedor_actividad_ciiu
      description: create ProveedorActividadCiiu
      operationId: ProveedorActividadCiiuController.Post
      parameters:
      - in: body
        name: body
        description: body for ProveedorActividadCiiu content
        required: true
        schema:
          $ref: '#/definitions/ProveedorActividadCiiu'
      responses:
        "201":
          description: '{int} models.ProveedorActividadCiiu'
        "403":
          description: body is empty
  /proveedor_actividad_ciiu/{id}:
    get:
      tags:
      - proveedor_actividad_ciiu
      description: get ProveedorActividadCiiu by id
      operationId: ProveedorActividadCiiuController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorActividadCiiu'
        "403":
          description: :id is empty
    put:
      tags:
      - proveedor_actividad_ciiu
      description: update the ProveedorActividadCiiu
      operationId: ProveedorActividadCiiuController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProveedorActividadCiiu content
        required: true
        schema:
          $ref: '#/definitions/ProveedorActividadCiiu'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorActividadCiiu'
        "403":
          description: :id is not int
    delete:
      tags:
      - proveedor_actividad_ciiu
      description: delete the ProveedorActividadCiiu
      operationId: ProveedorActividadCiiuController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proveedor_representante_legal/:
    get:
      tags:
      - proveedor_representante_legal
      description: get ProveedorRepresentanteLegal
      operationId: ProveedorRepresentanteLegalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorRepresentanteLegal'
        "403": {}
    post:
      tags:
      - proveedor_representante_legal
      description: create ProveedorRepresentanteLegal
      operationId: ProveedorRepresentanteLegalController.Post
      parameters:
      - in: body
        name: body
        description: body for ProveedorRepresentanteLegal content
        required: true
        schema:
          $ref: '#/definitions/ProveedorRepresentanteLegal'
      responses:
        "201":
          description: '{int} models.ProveedorRepresentanteLegal'
        "403":
          description: body is empty
  /proveedor_representante_legal/{id}:
    get:
      tags:
      - proveedor_representante_legal
      description: get ProveedorRepresentanteLegal by id
      operationId: ProveedorRepresentanteLegalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorRepresentanteLegal'
        "403":
          description: :id is empty
    put:
      tags:
      - proveedor_representante_legal
      description: update the ProveedorRepresentanteLegal
      operationId: ProveedorRepresentanteLegalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProveedorRepresentanteLegal content
        required: true
        schema:
          $ref: '#/definitions/ProveedorRepresentanteLegal'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorRepresentanteLegal'
        "403":
          description: :id is not int
    delete:
      tags:
      - proveedor_representante_legal
      description: delete the ProveedorRepresentanteLegal
      operationId: ProveedorRepresentanteLegalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proveedor_telefono/:
    get:
      tags:
      - proveedor_telefono
      description: get ProveedorTelefono
      operationId: ProveedorTelefonoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorTelefono'
        "403": {}
    post:
      tags:
      - proveedor_telefono
      description: create ProveedorTelefono
      operationId: ProveedorTelefonoController.Post
      parameters:
      - in: body
        name: body
        description: body for ProveedorTelefono content
        required: true
        schema:
          $ref: '#/definitions/ProveedorTelefono'
      responses:
        "201":
          description: '{int} models.ProveedorTelefono'
        "403":
          description: body is empty
  /proveedor_telefono/{id}:
    get:
      tags:
      - proveedor_telefono
      description: get ProveedorTelefono by id
      operationId: ProveedorTelefonoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorTelefono'
        "403":
          description: :id is empty
    put:
      tags:
      - proveedor_telefono
      description: update the ProveedorTelefono
      operationId: ProveedorTelefonoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProveedorTelefono content
        required: true
        schema:
          $ref: '#/definitions/ProveedorTelefono'
      responses:
        "200":
          schema:
            $ref: '#/definitions/ProveedorTelefono'
        "403":
          description: :id is not int
    delete:
      tags:
      - proveedor_telefono
      description: delete the ProveedorTelefono
      operationId: ProveedorTelefonoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rup_especialidad/:
    get:
      tags:
      - rup_especialidad
      description: get RupEspecialidad
      operationId: RupEspecialidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupEspecialidad'
        "403": {}
    post:
      tags:
      - rup_especialidad
      description: create RupEspecialidad
      operationId: RupEspecialidadController.Post
      parameters:
      - in: body
        name: body
        description: body for RupEspecialidad content
        required: true
        schema:
          $ref: '#/definitions/RupEspecialidad'
      responses:
        "201":
          description: '{int} models.RupEspecialidad'
        "403":
          description: body is empty
  /rup_especialidad/{id}:
    get:
      tags:
      - rup_especialidad
      description: get RupEspecialidad by id
      operationId: RupEspecialidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupEspecialidad'
        "403":
          description: :id is empty
    put:
      tags:
      - rup_especialidad
      description: update the RupEspecialidad
      operationId: RupEspecialidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RupEspecialidad content
        required: true
        schema:
          $ref: '#/definitions/RupEspecialidad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupEspecialidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - rup_especialidad
      description: delete the RupEspecialidad
      operationId: RupEspecialidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rup_grupo/:
    get:
      tags:
      - rup_grupo
      description: get RupGrupo
      operationId: RupGrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupGrupo'
        "403": {}
    post:
      tags:
      - rup_grupo
      description: create RupGrupo
      operationId: RupGrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for RupGrupo content
        required: true
        schema:
          $ref: '#/definitions/RupGrupo'
      responses:
        "201":
          description: '{int} models.RupGrupo'
        "403":
          description: body is empty
  /rup_grupo/{id}:
    get:
      tags:
      - rup_grupo
      description: get RupGrupo by id
      operationId: RupGrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupGrupo'
        "403":
          description: :id is empty
    put:
      tags:
      - rup_grupo
      description: update the RupGrupo
      operationId: RupGrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RupGrupo content
        required: true
        schema:
          $ref: '#/definitions/RupGrupo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupGrupo'
        "403":
          description: :id is not int
    delete:
      tags:
      - rup_grupo
      description: delete the RupGrupo
      operationId: RupGrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rup_tipo/:
    get:
      tags:
      - rup_tipo
      description: get RupTipo
      operationId: RupTipoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupTipo'
        "403": {}
    post:
      tags:
      - rup_tipo
      description: create RupTipo
      operationId: RupTipoController.Post
      parameters:
      - in: body
        name: body
        description: body for RupTipo content
        required: true
        schema:
          $ref: '#/definitions/RupTipo'
      responses:
        "201":
          description: '{int} models.RupTipo'
        "403":
          description: body is empty
  /rup_tipo/{id}:
    get:
      tags:
      - rup_tipo
      description: get RupTipo by id
      operationId: RupTipoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupTipo'
        "403":
          description: :id is empty
    put:
      tags:
      - rup_tipo
      description: update the RupTipo
      operationId: RupTipoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RupTipo content
        required: true
        schema:
          $ref: '#/definitions/RupTipo'
      responses:
        "200":
          schema:
            $ref: '#/definitions/RupTipo'
        "403":
          description: :id is not int
    delete:
      tags:
      - rup_tipo
      description: delete the RupTipo
      operationId: RupTipoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /snies_area/:
    get:
      tags:
      - snies_area
      description: get SniesArea
      operationId: SniesAreaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesArea'
        "403": {}
    post:
      tags:
      - snies_area
      description: create SniesArea
      operationId: SniesAreaController.Post
      parameters:
      - in: body
        name: body
        description: body for SniesArea content
        required: true
        schema:
          $ref: '#/definitions/SniesArea'
      responses:
        "201":
          description: '{int} models.SniesArea'
        "403":
          description: body is empty
  /snies_area/{id}:
    get:
      tags:
      - snies_area
      description: get SniesArea by id
      operationId: SniesAreaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesArea'
        "403":
          description: :id is empty
    put:
      tags:
      - snies_area
      description: update the SniesArea
      operationId: SniesAreaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SniesArea content
        required: true
        schema:
          $ref: '#/definitions/SniesArea'
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesArea'
        "403":
          description: :id is not int
    delete:
      tags:
      - snies_area
      description: delete the SniesArea
      operationId: SniesAreaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /snies_nucleo_basico/:
    get:
      tags:
      - snies_nucleo_basico
      description: get SniesNucleoBasico
      operationId: SniesNucleoBasicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesNucleoBasico'
        "403": {}
    post:
      tags:
      - snies_nucleo_basico
      description: create SniesNucleoBasico
      operationId: SniesNucleoBasicoController.Post
      parameters:
      - in: body
        name: body
        description: body for SniesNucleoBasico content
        required: true
        schema:
          $ref: '#/definitions/SniesNucleoBasico'
      responses:
        "201":
          description: '{int} models.SniesNucleoBasico'
        "403":
          description: body is empty
  /snies_nucleo_basico/{id}:
    get:
      tags:
      - snies_nucleo_basico
      description: get SniesNucleoBasico by id
      operationId: SniesNucleoBasicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesNucleoBasico'
        "403":
          description: :id is empty
    put:
      tags:
      - snies_nucleo_basico
      description: update the SniesNucleoBasico
      operationId: SniesNucleoBasicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SniesNucleoBasico content
        required: true
        schema:
          $ref: '#/definitions/SniesNucleoBasico'
      responses:
        "200":
          schema:
            $ref: '#/definitions/SniesNucleoBasico'
        "403":
          description: :id is not int
    delete:
      tags:
      - snies_nucleo_basico
      description: delete the SniesNucleoBasico
      operationId: SniesNucleoBasicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /solicitud_cotizacion/:
    get:
      tags:
      - solicitud_cotizacion
      description: get SolicitudCotizacion
      operationId: SolicitudCotizacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SolicitudCotizacion'
        "403": {}
    post:
      tags:
      - solicitud_cotizacion
      description: create SolicitudCotizacion
      operationId: SolicitudCotizacionController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudCotizacion content
        required: true
        schema:
          $ref: '#/definitions/SolicitudCotizacion'
      responses:
        "201":
          description: '{int} models.SolicitudCotizacion'
        "403":
          description: body is empty
  /solicitud_cotizacion/{id}:
    get:
      tags:
      - solicitud_cotizacion
      description: get SolicitudCotizacion by id
      operationId: SolicitudCotizacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/SolicitudCotizacion'
        "403":
          description: :id is empty
    put:
      tags:
      - solicitud_cotizacion
      description: update the SolicitudCotizacion
      operationId: SolicitudCotizacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudCotizacion content
        required: true
        schema:
          $ref: '#/definitions/SolicitudCotizacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/SolicitudCotizacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - solicitud_cotizacion
      description: delete the SolicitudCotizacion
      operationId: SolicitudCotizacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /supervisor/:
    get:
      tags:
      - supervisor
      description: get Supervisor
      operationId: SupervisorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Supervisor'
        "403": {}
    post:
      tags:
      - supervisor
      description: create Supervisor
      operationId: SupervisorController.Post
      parameters:
      - in: body
        name: body
        description: body for Supervisor content
        required: true
        schema:
          $ref: '#/definitions/Supervisor'
      responses:
        "201":
          description: '{int} models.Supervisor'
        "403":
          description: body is empty
  /supervisor/{id}:
    get:
      tags:
      - supervisor
      description: get Supervisor by id
      operationId: SupervisorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Supervisor'
        "403":
          description: :id is empty
    put:
      tags:
      - supervisor
      description: update the Supervisor
      operationId: SupervisorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Supervisor content
        required: true
        schema:
          $ref: '#/definitions/Supervisor'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Supervisor'
        "403":
          description: :id is not int
    delete:
      tags:
      - supervisor
      description: delete the Supervisor
      operationId: SupervisorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /telefono/:
    get:
      tags:
      - telefono
      description: get Telefono
      operationId: TelefonoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Telefono'
        "403": {}
    post:
      tags:
      - telefono
      description: create Telefono
      operationId: TelefonoController.Post
      parameters:
      - in: body
        name: body
        description: body for Telefono content
        required: true
        schema:
          $ref: '#/definitions/Telefono'
      responses:
        "201":
          description: '{int} models.Telefono'
        "403":
          description: body is empty
  /telefono/{id}:
    get:
      tags:
      - telefono
      description: get Telefono by id
      operationId: TelefonoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Telefono'
        "403":
          description: :id is empty
    put:
      tags:
      - telefono
      description: update the Telefono
      operationId: TelefonoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Telefono content
        required: true
        schema:
          $ref: '#/definitions/Telefono'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Telefono'
        "403":
          description: :id is not int
    delete:
      tags:
      - telefono
      description: delete the Telefono
      operationId: TelefonoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_conformacion/:
    get:
      tags:
      - tipo_conformacion
      description: get TipoConformacion
      operationId: TipoConformacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/TipoConformacion'
        "403": {}
    post:
      tags:
      - tipo_conformacion
      description: create TipoConformacion
      operationId: TipoConformacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoConformacion content
        required: true
        schema:
          $ref: '#/definitions/TipoConformacion'
      responses:
        "201":
          description: '{int} models.TipoConformacion'
        "403":
          description: body is empty
  /tipo_conformacion/{id}:
    get:
      tags:
      - tipo_conformacion
      description: get TipoConformacion by id
      operationId: TipoConformacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/TipoConformacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_conformacion
      description: update the TipoConformacion
      operationId: TipoConformacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoConformacion content
        required: true
        schema:
          $ref: '#/definitions/TipoConformacion'
      responses:
        "200":
          schema:
            $ref: '#/definitions/TipoConformacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_conformacion
      description: delete the TipoConformacion
      operationId: TipoConformacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /unidad/:
    get:
      tags:
      - unidad
      description: get Unidad
      operationId: UnidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Unidad'
        "403": {}
    post:
      tags:
      - unidad
      description: create Unidad
      operationId: UnidadController.Post
      parameters:
      - in: body
        name: body
        description: body for Unidad content
        required: true
        schema:
          $ref: '#/definitions/Unidad'
      responses:
        "201":
          description: '{int} models.Unidad'
        "403":
          description: body is empty
  /unidad/{id}:
    get:
      tags:
      - unidad
      description: get Unidad by id
      operationId: UnidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/Unidad'
        "403":
          description: :id is empty
    put:
      tags:
      - unidad
      description: update the Unidad
      operationId: UnidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Unidad content
        required: true
        schema:
          $ref: '#/definitions/Unidad'
      responses:
        "200":
          schema:
            $ref: '#/definitions/Unidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - unidad
      description: delete the Unidad
      operationId: UnidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  Banco:
    title: Banco
    type: object
    properties:
      DenominacionBanco:
        type: string
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      NombreBanco:
        type: string
  CiiuClase:
    title: CiiuClase
    type: object
    properties:
      Division:
        $ref: '#/definitions/CiiuDivision'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  CiiuDivision:
    title: CiiuDivision
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Tipo:
        $ref: '#/definitions/CiiuTipo'
  CiiuSubclase:
    title: CiiuSubclase
    type: object
    properties:
      Clase:
        $ref: '#/definitions/CiiuClase'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  CiiuTipo:
    title: CiiuTipo
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  Ciudad:
    title: Ciudad
    type: object
    properties:
      AbPais:
        type: string
      Abreviatura:
        type: string
      Departamento:
        type: string
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      IdDepartamento:
        $ref: '#/definitions/Departamento'
      Latitud:
        type: number
        format: double
      Longitud:
        type: number
        format: double
      Nombre:
        type: string
      Poblacion:
        type: integer
        format: int64
  CodigoValidacion:
    title: CodigoValidacion
    type: object
    properties:
      Fecha:
        $ref: '#/definitions/&{time Time}'
      Id:
        type: integer
        format: int64
      IdTabla:
        type: number
        format: double
      TipoCertificacion:
        type: number
        format: double
  Contrato:
    title: Contrato
    type: object
    properties:
      Estado:
        type: string
      FechaRegistro:
        $ref: '#/definitions/&{time Time}'
      Id:
        type: integer
        format: int64
      IdObjeto:
        $ref: '#/definitions/ObjetoContratar'
      IdSupervisor:
        $ref: '#/definitions/Supervisor'
      NumeroContrato:
        type: number
        format: double
      UnidadEjecutora:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  ContratoProveedor:
    title: ContratoProveedor
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdContrato:
        $ref: '#/definitions/Contrato'
      IdProveedor:
        $ref: '#/definitions/InformacionProveedor'
      Vigencia:
        type: number
        format: double
  Departamento:
    title: Departamento
    type: object
    properties:
      AbPais:
        type: string
      Abreviatura:
        type: string
      Area:
        type: integer
        format: int64
      CapitalDepartamento:
        type: string
      DepartamentoCapPais:
        type: string
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      IdPais:
        $ref: '#/definitions/Pais'
      Nombre:
        type: string
      Poblacion:
        type: integer
        format: int64
  Dependencia:
    title: Dependencia
    type: object
    properties:
      Correo:
        type: string
      Dependencia:
        type: string
      Id:
        type: integer
        format: int64
  Evaluacion:
    title: Evaluacion
    type: object
    properties:
      Cantidades:
        type: string
      Clasificacion:
        type: string
      Conformidad:
        type: string
      FechaRegistro:
        $ref: '#/definitions/&{time Time}'
      FuncionalidadAdicional:
        type: string
      Garantia:
        type: string
      GarantiaSatisfaccion:
        type: string
      Id:
        type: integer
        format: int64
      IdContrato:
        $ref: '#/definitions/Contrato'
      Procedimientos:
        type: string
      PuntajeTotal:
        type: number
        format: double
      ReclamacionSolucion:
        type: string
      Reclamaciones:
        type: string
      ServicioVenta:
        type: string
      TiemoEntrega:
        type: string
  InformacionPersonaJuridica:
    title: InformacionPersonaJuridica
    type: object
    properties:
      AgenteRetenedor:
        type: boolean
      CodigoPaisDian:
        type: number
        format: double
      CodigoPostal:
        type: number
        format: double
      DigitoVerificacion:
        type: number
        format: double
      ExclusividadProducto:
        type: boolean
      Genero:
        type: string
      Id:
        type: integer
        format: int64
      IdCiudadOrigen:
        $ref: '#/definitions/Ciudad'
      IdTipoConformacion:
        $ref: '#/definitions/TipoConformacion'
      MontoCapitalAutorizado:
        type: number
        format: double
      NomProveedor:
        type: string
      NumCedulaExtranjeria:
        type: number
        format: double
      NumPasaporte:
        type: number
        format: double
      ProcedenciaEmpresa:
        type: string
      Pyme:
        type: boolean
      RegimenContributivo:
        type: string
      RegistroMercantil:
        type: boolean
      ResponsableICA:
        type: boolean
      ResponsableIVA:
        type: boolean
      SujetoRetencion:
        type: boolean
      TipoIdentificacionExtranjera:
        type: string
  InformacionPersonaNatural:
    title: InformacionPersonaNatural
    type: object
    properties:
      CabezaFamilia:
        type: boolean
      Cargo:
        type: string
      ComunidadLgbt:
        type: boolean
      CuentaAhorroAfc:
        type: boolean
      DeclaranteRenta:
        type: boolean
      DependienteConyuge:
        type: boolean
      DependienteHijoMas23Discapacitado:
        type: boolean
      DependienteHijoMenorEdad:
        type: boolean
      DependienteHijoMenos23Estudiando:
        type: boolean
      DependientePadreOHermano:
        type: boolean
      DigitoVerificacion:
        type: number
        format: double
      Discapacitado:
        type: boolean
      Especialidad:
        type: string
      EstadoCivil:
        type: string
      Genero:
        type: string
      GrupoEtnico:
        type: string
      Id:
        type: integer
        format: int64
      IdEntidadBancariaAfc:
        type: number
        format: double
      IdNucleoBasico:
        $ref: '#/definitions/SniesNucleoBasico'
      IdPaisNacimiento:
        $ref: '#/definitions/Pais'
      InteresViviendaAfc:
        type: number
        format: double
      MedicinaPrepagada:
        type: boolean
      MontoCapitalAutorizado:
        type: number
        format: double
      NumCuentaBancariaAfc:
        type: string
      NumeroPersonasACargo:
        type: number
        format: double
      Perfil:
        $ref: '#/definitions/ParametroEstandar'
      PersonasACargo:
        type: boolean
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      Profesion:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
      TipoDiscapacidad:
        type: string
      TipoDocumento:
        $ref: '#/definitions/ParametroEstandar'
      ValorUvtPrepagada:
        type: number
        format: double
  InformacionProveedor:
    title: InformacionProveedor
    type: object
    properties:
      Anexorut:
        type: string
      ClasificacionEvaluacion:
        type: string
      Correo:
        type: string
      Descripcion:
        type: string
      Direccion:
        type: string
      Estado:
        $ref: '#/definitions/ParametroEstandar'
      FechaRegistro:
        type: string
      FechaUltimaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      IdCiudadContacto:
        $ref: '#/definitions/Ciudad'
      IdEntidadBancaria:
        type: number
        format: double
      NomAsesor:
        type: string
      NomProveedor:
        type: string
      NumCuentaBancaria:
        type: string
      NumDocumento:
        type: number
        format: double
      PuntajeEvaluacion:
        type: number
        format: double
      TelAsesor:
        type: string
      TipoCuentaBancaria:
        type: string
      Tipopersona:
        type: string
      Web:
        type: string
  InformacionSociedadParticipante:
    title: InformacionSociedadParticipante
    type: object
    properties:
      DocumentoContratista:
        $ref: '#/definitions/InformacionProveedor'
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      IdSociedad:
        $ref: '#/definitions/InformacionSociedadTemporal'
      PorcentajeParticipacion:
        type: number
        format: double
  InformacionSociedadTemporal:
    title: InformacionSociedadTemporal
    type: object
    properties:
      DigitoVerificacion:
        type: integer
        format: int64
      DocumentoRepresentante:
        $ref: '#/definitions/InformacionPersonaNatural'
      DocumentoSuplente:
        $ref: '#/definitions/InformacionPersonaNatural'
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Identificacion:
        $ref: '#/definitions/InformacionProveedor'
  Inhabilidad:
    title: Inhabilidad
    type: object
    properties:
      Descripcion:
        type: string
      FechaInhabilidad:
        $ref: '#/definitions/&{time Time}'
      Id:
        type: integer
        format: int64
      IdProveedor:
        $ref: '#/definitions/InformacionProveedor'
      TiempoInhabilidad:
        type: string
      TipoInhabilidad:
        type: string
  Menu:
    title: Menu
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdPagina:
        type: number
        format: double
      NombreMenu:
        type: string
      Orden:
        type: number
        format: double
      Parametros:
        type: string
      Rolmenu:
        type: number
        format: double
      Tooltip:
        type: string
  NomenclaturaDian:
    title: NomenclaturaDian
    type: object
    properties:
      Abreviatura:
        type: string
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      Nomenclatura:
        type: string
  ObjetoContratar:
    title: ObjetoContratar
    type: object
    properties:
      Cantidad:
        type: number
        format: double
      Estado:
        type: string
      Fecharegistro:
        $ref: '#/definitions/&{time Time}'
      Fechasolicitudcotizacion:
        $ref: '#/definitions/&{time Time}'
      Id:
        type: integer
        format: int64
      IdUnidad:
        $ref: '#/definitions/Unidad'
      NumeroCotizaciones:
        type: number
        format: double
      NumeroSolicitud:
        type: number
        format: double
      TipoNecesidad:
        type: string
      UnidadEjecutora:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  ObjetoContratarActividadCiiu:
    title: ObjetoContratarActividadCiiu
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdSubclase:
        $ref: '#/definitions/CiiuSubclase'
  ObjetoContratarNucleoBasico:
    title: ObjetoContratarNucleoBasico
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdNucleo:
        $ref: '#/definitions/SniesNucleoBasico'
  OrdenadorGasto:
    title: OrdenadorGasto
    type: object
    properties:
      CorreoOrdenador:
        type: string
      Estado:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      NombreOrdenador:
        type: string
  Pais:
    title: Pais
    type: object
    properties:
      Abreviatura:
        type: string
      AreaPais:
        type: integer
        format: int64
      CapitalPais:
        type: string
      CodigoPais:
        type: integer
        format: int64
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      NombrePais:
        type: string
      PoblacionPais:
        type: integer
        format: int64
      ProvinciaPais:
        type: string
  ParametroEstandar:
    title: ParametroEstandar
    type: object
    properties:
      ClaseParametro:
        type: string
      DescripcionParametro:
        type: string
      Id:
        type: integer
        format: int64
      ValorParametro:
        type: string
  ProveedorActividadCiiu:
    title: ProveedorActividadCiiu
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdSubclase:
        $ref: '#/definitions/CiiuSubclase'
  ProveedorRepresentanteLegal:
    title: ProveedorRepresentanteLegal
    type: object
    properties:
      CorreoRepresentante:
        type: string
      Id:
        type: integer
        format: int64
      IdRepresentante:
        $ref: '#/definitions/InformacionPersonaNatural'
      TelefonoContacto:
        type: number
        format: double
  ProveedorTelefono:
    title: ProveedorTelefono
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdTelefono:
        $ref: '#/definitions/Telefono'
  RupEspecialidad:
    title: RupEspecialidad
    type: object
    properties:
      Especialidad:
        type: string
      Id:
        type: integer
        format: int64
      IdTipoEspecialidad:
        $ref: '#/definitions/RupTipo'
  RupGrupo:
    title: RupGrupo
    type: object
    properties:
      Grupo:
        type: string
      Id:
        type: integer
        format: int64
      IdEspecialidad:
        $ref: '#/definitions/RupEspecialidad'
  RupTipo:
    title: RupTipo
    type: object
    properties:
      Id:
        type: integer
        format: int64
      TipoEspecialidad:
        type: string
  SniesArea:
    title: SniesArea
    type: object
    properties:
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  SniesNucleoBasico:
    title: SniesNucleoBasico
    type: object
    properties:
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      IdArea:
        $ref: '#/definitions/SniesArea'
      Nombre:
        type: string
  SolicitudCotizacion:
    title: SolicitudCotizacion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdObjeto:
        $ref: '#/definitions/ObjetoContratar'
      IdProveedor:
        $ref: '#/definitions/InformacionProveedor'
  Supervisor:
    title: Supervisor
    type: object
    properties:
      Cedula:
        type: number
        format: double
      CorreoSupervisor:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      IdDependencia:
        $ref: '#/definitions/Dependencia'
      NombreSupervisor:
        type: string
  Telefono:
    title: Telefono
    type: object
    properties:
      Extension:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      NumeroTel:
        type: number
        format: double
      Tipo:
        type: number
        format: double
  TipoConformacion:
    title: TipoConformacion
    type: object
    properties:
      Descripcion:
        type: string
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  Unidad:
    title: Unidad
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Tipo:
        type: string
      Unidad:
        type: string
tags:
- name: informacion_sociedad_participante
  description: |
    InformacionSociedadParticipanteController oprations for InformacionSociedadParticipante
- name: informacion_proveedor
  description: |
    InformacionProveedorController oprations for InformacionProveedor
- name: informacion_sociedad_temporal
  description: |
    InformacionSociedadTemporalController oprations for InformacionSociedadTemporal
- name: ciiu_clase
  description: |
    CiiuClaseController oprations for CiiuClase
- name: dependencia
  description: |
    DependenciaController oprations for Dependencia
- name: banco
  description: |
    BancoController oprations for Banco
- name: contrato
  description: |
    ContratoController oprations for Contrato
- name: departamento
  description: |
    DepartamentoController oprations for Departamento
- name: codigo_validacion
  description: |
    CodigoValidacionController oprations for CodigoValidacion
- name: inhabilidad
  description: |
    InhabilidadController oprations for Inhabilidad
- name: informacion_persona_natural
  description: |
    InformacionPersonaNaturalController oprations for InformacionPersonaNatural
- name: ciudad
  description: |
    CiudadController oprations for Ciudad
- name: informacion_persona_juridica
  description: |
    InformacionPersonaJuridicaController oprations for InformacionPersonaJuridica
- name: contrato_proveedor
  description: |
    ContratoProveedorController oprations for ContratoProveedor
- name: evaluacion
  description: |
    EvaluacionController oprations for Evaluacion
- name: ciiu_tipo
  description: |
    CiiuTipoController oprations for CiiuTipo
- name: menu
  description: |
    MenuController oprations for Menu
- name: nomenclatura_dian
  description: |
    NomenclaturaDianController oprations for NomenclaturaDian
- name: ciiu_division
  description: |
    CiiuDivisionController oprations for CiiuDivision
- name: ciiu_subclase
  description: |
    CiiuSubclaseController oprations for CiiuSubclase
- name: ordenador_gasto
  description: |
    OrdenadorGastoController oprations for OrdenadorGasto
- name: rup_tipo
  description: |
    RupTipoController oprations for RupTipo
- name: objeto_contratar
  description: |
    ObjetoContratarController oprations for ObjetoContratar
- name: supervisor
  description: |
    SupervisorController oprations for Supervisor
- name: pais
  description: |
    PaisController oprations for Pais
- name: snies_nucleo_basico
  description: |
    SniesNucleoBasicoController oprations for SniesNucleoBasico
- name: proveedor_representante_legal
  description: |
    ProveedorRepresentanteLegalController oprations for ProveedorRepresentanteLegal
- name: proveedor_actividad_ciiu
  description: |
    ProveedorActividadCiiuController oprations for ProveedorActividadCiiu
- name: rup_especialidad
  description: |
    RupEspecialidadController oprations for RupEspecialidad
- name: telefono
  description: |
    TelefonoController oprations for Telefono
- name: parametro_estandar
  description: |
    ParametroEstandarController oprations for ParametroEstandar
- name: proveedor_telefono
  description: |
    ProveedorTelefonoController oprations for ProveedorTelefono
- name: snies_area
  description: |
    SniesAreaController oprations for SniesArea
- name: solicitud_cotizacion
  description: |
    SolicitudCotizacionController oprations for SolicitudCotizacion
- name: objeto_contratar_nucleo_basico
  description: |
    ObjetoContratarNucleoBasicoController oprations for ObjetoContratarNucleoBasico
- name: objeto_contratar_actividad_ciiu
  description: |
    ObjetoContratarActividadCiiuController oprations for ObjetoContratarActividadCiiu
- name: rup_grupo
  description: |
    RupGrupoController oprations for RupGrupo
- name: unidad
  description: |
    UnidadController oprations for Unidad
- name: tipo_conformacion
  description: |
    TipoConformacionController oprations for TipoConformacion
